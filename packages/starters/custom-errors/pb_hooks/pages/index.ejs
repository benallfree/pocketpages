<script server>
  const { action, pocketbaseApiError, customStatus } = params

  if (action === 'throw') {
    throw new Error('This is a test error')
  } else if (action === 'runtimeError') {
    const obj = null
    obj.someProperty = 'This will throw a runtime error'
  } else if (action === 'throwPocketbaseApiErrorCustomStatus') {
    throw new ApiError(customStatus || 500, 'ApiError', { x: 1 })
  } else if (action === 'pocketbaseApiError') {
    const errorType = pocketbaseApiError || 'BadRequestError'
    if (errorType === 'BadRequestError') {
      throw new BadRequestError('BadRequestError', {
        x: 1,
      })
    } else if (errorType === 'UnauthorizedError') {
      throw new UnauthorizedError('UnauthorizedError', {
        x: 1,
      })
    } else if (errorType === 'ForbiddenError') {
      throw new ForbiddenError('ForbiddenError', {
        x: 1,
      })
    } else if (errorType === 'NotFoundError') {
      throw new NotFoundError('NotFoundError', { x: 1 })
    } else if (errorType === 'TooManyrequestsError') {
      throw new TooManyrequestsError('TooManyrequestsError', {
        x: 1,
      })
    } else if (errorType === 'InternalServerError') {
      throw new InternalServerError('InternalServerError', {
        x: 1,
      })
    }
  }
</script>

<!-- slot:content -->
<h2>Error Handling Examples</h2>

<article>
  <form method="GET">
    <input type="hidden" name="action" value="throw" />
    <header>Throw a Generic Error</header>
    <code>throw new Error('This is a test error');</code>
    <button type="submit">Throw Error</button>
  </form>
</article>

<article>
  <form method="GET">
    <input type="hidden" name="action" value="runtimeError" />
    <header>Generate a Runtime Error</header>
    <code>const a = null; a.b = 42;</code>
    <button type="submit">Runtime Error</button>
  </form>
</article>

<article>
  <form method="GET">
    <input
      type="hidden"
      name="action"
      value="throwPocketbaseApiErrorCustomStatus"
    />
    <header>Throw an API Error - Custom Status Code</header>
    <p>
      To test the various error wildcard routes (404, 403, 40x, 4xx, 504, 50x,
      5xx, error.ejs (catch-all)) try entering specific 400 and 500 status
      codes.
    </p>
    <code
      >throw new ApiError(customStatus, 'This is a test API error with custom
      status code');</code
    >
    <fieldset role="group">
      <input name="customStatus" value="404" />
      <button type="submit">Throw</button>
    </fieldset>
  </form>
</article>

<article>
  <form method="GET">
    <input type="hidden" name="action" value="pocketbaseApiError" />
    <header>Throw an Pocketbase API Error</header>
    <code>throw new BadRequestError(500);</code>

    <select
      name="pocketbaseApiError"
      aria-label="Select a PocketBase API error..."
      required
    >
      <option selected disabled value="">Select a PocketBase error</option>
      <option value="BadRequestError">Bad Request (400)</option>
      <option value="UnauthorizedError">Unauthorized (401)</option>
      <option value="ForbiddenError">Forbidden (403)</option>
      <option value="NotFoundError">Not Found (404)</option>
      <option value="TooManyrequestsError">Too Many Requests (429)</option>
      <option value="InternalServerError">Internal Server Error (500)</option>
      <option value="PocketbaseApiError">Pocketbase API Error</option>
    </select>

    <button type="submit">Throw</button>
  </form>
</article>
